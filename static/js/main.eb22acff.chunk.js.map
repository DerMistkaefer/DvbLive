{"version":3,"sources":["assets/logo.svg","services/backend/index.ts","components/Map/PositionControl.tsx","components/Map/VehiclePositionCalculator.ts","components/Map/VehiclePositionDisplay.tsx","components/Map/Map.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["baseUrl","getAllPublicTransportLines","a","axios","get","response","data","getAllStopPoints","getLiveVehiclePositionData","triggerEvents","positions","top","right","bottom","left","containerStyle","position","zIndex","boxShadow","border","backgroundColor","opacity","display","flexDirection","alignItems","padding","POSITIONS","Object","keys","PositionControl","state","longitude","latitude","zoom","setPosition","map","props","setState","getCenter","lng","toFixed","lat","getZoom","this","forEach","event","on","off","style","className","tabIndex","React","defaultProps","withMap","Component","Consumer","VehiclePositionCalculator","stopPoints","stopPoint","idStopPoint","liveData","nowMillis","Date","now","nowSeconds","Math","floor","from","select","trip","getTripCurrentPosition","idTrip","toArray","stops","stopOver","lastOrDefault","stop","departureTime","stopNext","firstOrDefault","arrivalTime","GetStopPosition","Error","minValue","maxValue","idLastStop","idNextStop","currentPercentageBetweenStops","PercentageBetween","GetCurrentPosition","lastStopPoint","nextStopPoint","NumberWithPercentage","idStop","percentage","currentValue","number","isFinite","Query","children","useQuery","keyName","fn","options","enable","markerCache","calculator","liveVehiclePositionData","framesPerSecond","requestAnimationFrame","timestamp","updateVehiclePosition","undefined","setStopPoints","getCurrentVehiclePositions","where","x","any","y","marker","console","log","mapboxgl","Marker","setLngLat","addTo","setTimeout","workerClass","require","default","accessToken","Mapbox","ReactMapboxGl","StyledPopup","color","fontWeight","flyToOptions","speed","Map","useState","setLng","setLat","setZoom","selectedStopPoint","setSelectedStopPoint","mapboxMap","setMapboxMap","onToggleHover","cursor","getCanvas","markerClick","lines","linesFeatureCollection","type","features","line","center","onDrag","onStyleLoad","marginBottom","lineLayout","linePaint","layout","onClick","bind","onMouseEnter","onMouseLeave","coordinates","properties","network","stopPointName","queryClient","QueryClient","defaultOptions","queries","cacheTime","webStoragePersistor","createWebStoragePersistor","storage","window","localStorage","Page","src","logo","alt","href","target","rel","persistQueryClient","persistor","App","client","initialIsOpen","Boolean","location","hostname","match","Sentry","dsn","release","process","npm_package_version","autoSessionTracking","enabled","ReactDOM","render","StrictMode","fallback","showDialog","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb22acff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import axios from \"axios\";\nimport {PublicTransportLine} from \"./output/PublicTransportLine\";\nimport {StopPoint} from \"./output/StopPoint\";\nimport { VehiclePosition } from \"./output/VehiclePosition\";\n\nlet baseUrl = \"https://dvb-live-backend.dermistkaefer.de\";\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development')\n{\n    try {\n        const devUrl = \"http://localhost:11744\";\n        axios.get(`${devUrl}/hc`).then(response => {\n                if (response.status === 200) {\n                    baseUrl = devUrl;\n                }\n        });\n    }\n    catch (Error) {}\n}\n\nexport async function getAllPublicTransportLines(): Promise<PublicTransportLine[]>\n{\n    const response = await axios.get<PublicTransportLine[]>(`${baseUrl}/lines/all`);\n\n    return response.data;\n}\n\nexport async function getAllStopPoints(): Promise<StopPoint[]>\n{\n    const response = await axios.get<StopPoint[]>(`${baseUrl}/stops/all`);\n\n    return response.data;\n}\n\nexport async function getLiveVehiclePositionData(): Promise<VehiclePosition[]>\n{\n    const response = await axios.get<VehiclePosition[]>(`${baseUrl}/live/vehicle`);\n\n    return response.data;\n}\n\nexport type { PublicTransportLine, StopPoint, VehiclePosition };\n","import * as React from 'react';\nimport {Map} from 'mapbox-gl';\nimport {AnchorLimits} from 'react-mapbox-gl/lib-esm/util/types';\nimport {MapContext} from \"react-mapbox-gl\";\n\nconst triggerEvents = ['move'];\n\nconst positions = {\n    'top-right': {top: 10, right: 10, bottom: 'auto', left: 'auto'},\n    'top-left': {top: 10, left: 10, bottom: 'auto', right: 'auto'},\n    'bottom-right': {bottom: 10, right: 10, top: 'auto', left: 'auto'},\n    'bottom-left': {bottom: 10, left: 10, top: 'auto', right: 'auto'}\n};\n\nconst containerStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 10,\n    boxShadow: '0px 1px 4px rgba(0, 0, 0, .3)',\n    border: '1px solid rgba(0, 0, 0, 0.1)',\n    right: 50,\n    backgroundColor: '#fff',\n    opacity: 0.85,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline',\n    padding: '3px 7px'\n};\n\nconst POSITIONS = Object.keys(positions);\n\nexport interface Props {\n    position?: AnchorLimits;\n    style?: React.CSSProperties;\n    className?: string;\n    tabIndex?: number;\n    map: Map;\n}\n\nexport interface State {\n    longitude: number;\n    latitude: number;\n    zoom: number;\n}\n\nclass PositionControl extends React.Component<Props, State> {\n    public static defaultProps = {\n        position: POSITIONS[1]\n    };\n\n    public state = {\n        longitude: 0,\n        latitude: 0,\n        zoom: 0\n    };\n\n    public componentDidMount() {\n        this.setPosition();\n\n        triggerEvents.forEach(event => {\n            this.props.map.on(event, this.setPosition);\n        });\n    }\n\n    public componentWillUnmount() {\n        if (this.props.map) {\n            triggerEvents.forEach(event => {\n                this.props.map.off(event, this.setPosition);\n            });\n        }\n    }\n\n    public render() {\n        const {style, position, className, tabIndex} = this.props;\n        const {longitude, latitude, zoom} = this.state;\n\n        return (\n            <div\n                tabIndex={tabIndex}\n                style={{...containerStyle, ...positions[position!], ...style}}\n                className={className}\n            >\n                Longitude: {longitude} | Latitude: {latitude} | Zoom: {zoom}\n            </div>\n        );\n    }\n\n    private setPosition = () => {\n        const {map} = this.props;\n\n        this.setState({\n            longitude: +map.getCenter().lng.toFixed(4),\n            latitude: +map.getCenter().lat.toFixed(4),\n            zoom: +map.getZoom().toFixed(2)\n        });\n    };\n}\n\n// tslint:disable-next-line:no-any\nexport function withMap(Component: React.ComponentClass<any>) {\n    return function MappedComponent<T>(props: T) {\n        return (\n            <MapContext.Consumer>\n                {map => <Component map={map} {...props} />}\n            </MapContext.Consumer>\n        );\n    };\n}\n\nexport default withMap(PositionControl);\n","import {from} from \"linq-to-typescript\";\nimport {StopPoint, VehiclePosition} from \"../../services/backend\";\n\nexport interface VehiclePositionCalculated {\n    /**\n     * Unique Id of this Trip.\n     */\n    idTrip: string;\n\n    /**\n     * Current Position of this Trip.\n     */\n    position: GeoJSON.Position;\n}\n\nclass VehiclePositionCalculator\n{\n    private stopPoints: { [idStopPoint: string]: GeoJSON.Position; } = {};\n\n    public setStopPoints(stopPoints: StopPoint[]): void\n    {\n        stopPoints.forEach((stopPoint) => {\n            this.stopPoints[stopPoint.idStopPoint] = [stopPoint.longitude, stopPoint.latitude];\n        });\n    }\n\n    public getCurrentVehiclePositions(liveData: VehiclePosition[]): VehiclePositionCalculated[]\n    {\n        //console.log(\"run\");\n        const nowMillis = Date.now();\n        const nowSeconds = Math.floor(nowMillis / 1000);\n        return from(liveData).select((trip) => {\n            //const t1 = performance.now();\n            const position = this.getTripCurrentPosition(trip, nowMillis, nowSeconds);\n            //const t2 = performance.now();\n            //console.log(`Call getTripCurrentPosition ${trip.idTrip} took ${t2 - t1} millis.`)\n            return {\n                idTrip: trip.idTrip,\n                position: position\n            }\n        }).toArray()\n    }\n\n    private getTripCurrentPosition(trip: VehiclePosition, nowMillis: number, nowSeconds: number): GeoJSON.Position\n    {\n        const stops = from(trip.stops)\n        const stopOver = stops.lastOrDefault(stop => stop.departureTime != null && stop.departureTime <= nowSeconds);\n        const stopNext = stops.firstOrDefault(stop => stop.arrivalTime != null && nowSeconds <= stop.arrivalTime);\n        if (stopNext == null || stopOver == null)\n        {\n            // trip did not start or is finished\n            if (stopOver != null)\n            {\n                return this.GetStopPosition(stopOver.idStopPoint);\n            }\n            else if (stopNext != null)\n            {\n                return this.GetStopPosition(stopNext.idStopPoint);\n            }\n            throw new Error(\"Failed Cache\");\n        }\n\n        const minValue = stopOver.departureTime! * 1000;\n        const maxValue = stopNext.arrivalTime! * 1000;\n\n        const idLastStop = stopOver.idStopPoint;\n        const idNextStop = stopNext.idStopPoint;\n        const currentPercentageBetweenStops = VehiclePositionCalculator.PercentageBetween(minValue, maxValue, nowMillis);\n\n        return this.GetCurrentPosition(idLastStop, idNextStop, currentPercentageBetweenStops);\n    }\n\n    private GetCurrentPosition(idLastStop: string, idNextStop: string, currentPercentageBetweenStops: number): GeoJSON.Position\n    {\n        const lastStopPoint = this.GetStopPosition(idLastStop);\n        const nextStopPoint = this.GetStopPosition(idNextStop);\n\n        const currentLon = VehiclePositionCalculator.NumberWithPercentage(lastStopPoint[0], nextStopPoint[0], currentPercentageBetweenStops);\n        const currentLat = VehiclePositionCalculator.NumberWithPercentage(lastStopPoint[1], nextStopPoint[1], currentPercentageBetweenStops);\n\n        return [currentLon, currentLat];\n    }\n\n    private GetStopPosition(idStop: string): GeoJSON.Position\n    {\n        return this.stopPoints[idStop];\n    }\n\n    private static NumberWithPercentage(minValue: number, maxValue: number, percentage:number): number\n    {\n        return ((maxValue - minValue) * percentage) + minValue;\n    }\n\n    private static PercentageBetween(minValue: number, maxValue: number, currentValue: number): number\n    {\n        const number = (currentValue - minValue) / (maxValue - minValue);\n        return isFinite(number) ? number : 0;\n    }\n}\n\nexport default VehiclePositionCalculator;\n","import * as React from 'react';\nimport mapboxgl, {LngLatLike, Map} from 'mapbox-gl';\nimport {MapContext} from \"react-mapbox-gl\";\nimport VehiclePositionCalculator from \"./VehiclePositionCalculator\";\nimport {from} from \"linq-to-typescript\";\nimport {useQuery} from \"react-query\";\nimport {\n    getAllStopPoints,\n    getLiveVehiclePositionData,\n    StopPoint, VehiclePosition\n} from \"../../services/backend\";\nimport {UseQueryResult} from \"react-query/types/react/types\";\n\nexport interface Props {\n    style?: React.CSSProperties;\n    className?: string;\n    tabIndex?: number;\n    map: Map;\n}\n\nexport interface State {\n\n}\n\nfunction Query(props: any) {\n    return props.children(useQuery(props.keyName, props.fn, props.options));\n}\n\nclass VehiclePositionDisplay extends React.Component<Props, State> {\n\n    private enable: boolean = false;\n    private markerCache: { [idTrip: string]: mapboxgl.Marker } = {};\n    private calculator: VehiclePositionCalculator;\n    private liveVehiclePositionData: VehiclePosition[] = [];\n    private framesPerSecond = 24; // 24 is use in most films. https://en.wikipedia.org/wiki/Frame_rate\n\n    constructor(props: Props) {\n        super(props);\n        this.calculator = new VehiclePositionCalculator();\n    }\n\n    public componentDidMount() {\n        this.enable = true;\n        requestAnimationFrame((timestamp) => this.updateVehiclePosition(timestamp));\n    }\n\n    public componentWillUnmount() {\n        this.enable = false;\n    }\n\n    public render() {\n        return(\n            <div>\n                <Query keyName=\"stopPoints\" fn={getAllStopPoints}>\n                    {({data}: UseQueryResult<StopPoint[]>) => {\n                        data !== undefined && this.calculator.setStopPoints(data);\n                        return \"\";\n                    } }\n                </Query>\n                <Query keyName=\"liveVehiclePositions\" fn={getLiveVehiclePositionData}>\n                    {({data}: UseQueryResult<VehiclePosition[]>) => {\n                        this.liveVehiclePositionData = (data !== undefined ? from(data).toArray() : []);\n                        return \"\";\n                    } }\n                </Query>\n            </div>\n        );\n    }\n\n    private updateVehiclePosition(timestamp: number) {\n        const map = this.props.map;\n        const positions = this.calculator.getCurrentVehiclePositions(this.liveVehiclePositionData);\n        const deleteCache = from(Object.keys(this.markerCache)).where(x => !from(positions).any(y => y.idTrip === x));\n\n        deleteCache.toArray().forEach(x => delete this.markerCache[x]);\n\n        positions.forEach((position) => {\n           let marker = this.markerCache[position.idTrip];\n           if (marker === undefined) {\n               console.log(`New Marker ${position.idTrip}`);\n               marker = new mapboxgl.Marker();\n               this.markerCache[position.idTrip] = marker;\n           }\n           marker.setLngLat(position.position as LngLatLike);\n           marker.addTo(map);\n        });\n\n        if (this.enable) {\n            setTimeout(() => {\n                requestAnimationFrame((timestamp) => this.updateVehiclePosition(timestamp));\n            }, 1000 / this.framesPerSecond);\n        }\n    }\n}\n\n// tslint:disable-next-line:no-any\nexport function withMap(Component: React.ComponentClass<any>) {\n    return function MappedComponent<T>(props: T) {\n        return (\n            <MapContext.Consumer>\n                {map => <Component map={map} {...props} />}\n            </MapContext.Consumer>\n        );\n    };\n}\n\nexport default withMap(VehiclePositionDisplay);\n","import React, {useState} from 'react';\nimport ReactMapboxGl, {\n    Feature, GeoJSONLayer,\n    Layer,\n    Popup,\n    RotationControl,\n    ScaleControl,\n    ZoomControl\n} from 'react-mapbox-gl';\nimport mapboxgl, {FlyToOptions} from \"mapbox-gl\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {useQuery} from 'react-query';\nimport {getAllPublicTransportLines, getAllStopPoints, PublicTransportLine, StopPoint} from \"../../services/backend\";\nimport PositionControl from './PositionControl';\nimport './Map.css';\nimport {from} from \"linq-to-typescript\";\nimport VehiclePositionDisplay from \"./VehiclePositionDisplay\";\n\n// Webpack production build destroys the worker class. So load separately.\nif (process.env.NODE_ENV === 'production') {\n    // @ts-ignore\n    // eslint-disable-next-line import/no-webpack-loader-syntax\n    mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n}\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZGVybWlzdGthZWZlciIsImEiOiJja2swYWQ0NHAwZm16Mm9rMmE3M3k2Zjk3In0.p8sQOMjTL_muHCN36uY9iA';\nconst Mapbox = ReactMapboxGl({\n    accessToken: 'pk.eyJ1IjoiZGVybWlzdGthZWZlciIsImEiOiJja2swYWQ0NHAwZm16Mm9rMmE3M3k2Zjk3In0.p8sQOMjTL_muHCN36uY9iA'\n});\n\nconst StyledPopup: React.CSSProperties = {\n    color: \"#3f618c\",\n    fontWeight: 400,\n};\n\nconst flyToOptions: FlyToOptions = {\n    speed: 0.8\n};\n\nconst Map = () => {\n    const [lng, setLng] = useState(13.738);\n    const [lat, setLat] = useState(51.0497);\n    const [zoom, setZoom] = useState(12);\n    const [selectedStopPoint, setSelectedStopPoint] = useState<StopPoint|undefined>(undefined)\n    const [mapboxMap, setMapboxMap] = useState<mapboxgl.Map|undefined>(undefined)\n\n    const onDrag = () => {\n        if (selectedStopPoint)\n        {\n            setSelectedStopPoint(undefined);\n        }\n    }\n\n    const onToggleHover = (cursor: string) => {\n        if (mapboxMap) {\n            mapboxMap.getCanvas().style.cursor = cursor;\n        }\n    }\n\n    const markerClick = (stopPoint: StopPoint) => {\n        setSelectedStopPoint(stopPoint);\n        setLng(stopPoint.longitude);\n        setLat(stopPoint.latitude);\n        setZoom(14);\n    }\n\n    const stopPoints = useQuery<StopPoint[], Error>('stopPoints', getAllStopPoints);\n    const lines = useQuery<PublicTransportLine[], Error>('publicTransportLines', getAllPublicTransportLines);\n    let linesFeatureCollection: GeoJSON.FeatureCollection<GeoJSON.MultiLineString> | null = null;\n    if (lines.data != null)\n    {\n        linesFeatureCollection = {\n            type: \"FeatureCollection\",\n            features: from(lines.data).select(x => x.line).toArray()\n        };\n    }\n\n    return (\n        <Mapbox className='map-container'\n                /* eslint-disable-next-line react/style-prop-object */\n                style='mapbox://styles/mapbox/streets-v11'\n                center={[lng, lat]}\n                zoom={[zoom]}\n                onDrag={onDrag}\n                onStyleLoad={(map) => {\n                    setMapboxMap(map);\n                }}\n                flyToOptions={flyToOptions}\n        >\n            {/* Controls */}\n            <PositionControl />\n            <ZoomControl/>\n            <RotationControl/>\n            <ScaleControl style={{marginBottom: \"15px\"}}/>\n            {/* Lines */}\n            <GeoJSONLayer data={linesFeatureCollection}\n                          lineLayout={{\n                              \"visibility\": \"visible\"\n                          }}\n                          linePaint={{\n                              \"line-width\": 3,\n                              \"line-color\": \"#00f8ff\"\n                          }}\n            />\n            {/* StopPoints */}\n            <Layer type=\"symbol\" layout={{ \"icon-image\": [\"get\", \"network\"] }}>\n                {stopPoints.data != null && stopPoints.data.map(stopPoint =>\n                    <Feature key={stopPoint.idStopPoint}\n                             onClick={markerClick.bind(this, stopPoint)}\n                             onMouseEnter={onToggleHover.bind(this, 'pointer')}\n                             onMouseLeave={onToggleHover.bind(this, '')}\n                             coordinates={[stopPoint.longitude, stopPoint.latitude]}\n                             properties={{network: \"bus\"}}\n                             />\n                )}\n            </Layer>\n            {selectedStopPoint && (\n                <Popup key={selectedStopPoint.idStopPoint}\n                       coordinates={[selectedStopPoint.longitude, selectedStopPoint.latitude]}\n                       style={StyledPopup}\n                >\n                    {selectedStopPoint.stopPointName}\n                </Popup>\n            )}\n            {/* Live Vehicles */}\n            <VehiclePositionDisplay/>\n        </Mapbox>\n    );\n}\n\nexport default Map;\n","import React from 'react';\nimport logo from '../../assets/logo.svg';\nimport './App.css';\nimport Map from '../Map/Map';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { persistQueryClient } from 'react-query/persistQueryClient-experimental'\nimport { createWebStoragePersistor } from 'react-query/createWebStoragePersistor-experimental';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\n// BEGIN React Query Setup\nconst queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            cacheTime: 1000 * 60 * 60 * 24 // 24 hours\n        }\n    }\n});\nconst webStoragePersistor = createWebStoragePersistor({ storage: window.localStorage })\n\npersistQueryClient({\n    queryClient,\n    persistor: webStoragePersistor,\n});\n// END React Query Setup\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n        <Page />\n        <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n\nfunction Page() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.tsx</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n            <Map />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from \"@sentry/react\";\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nSentry.init({\n    dsn: \"https://e560ecb7fbd44b6a91809cf7deadaa4e@o247191.ingest.sentry.io/5536424\",\n    release: \"dvb-live-frontend@\" + process.env.npm_package_version,\n    autoSessionTracking: true,\n    enabled: process.env.NODE_ENV === 'production',\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <Sentry.ErrorBoundary fallback={<p>An error has occurred</p>} showDialog>\n          <App />\n      </Sentry.ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}